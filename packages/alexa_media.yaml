####################################################################################################
## Package - Alexa Media Player
####################################################################################################

# Uses custom component to add media player entries for all Amazon Echo devices.
# Component added via HACS

# Source: 
# https://github.com/keatontaylor/alexa_media_player/wiki/Installation-and-Configuration

# As of May 2019, support for:
#   Play/Pause/Stop
#   Next/Previous (Track)
#   Volume
#
# Retrieval for displaying in home assistant of:
#   Song Title
#   Artists Name
#   Album Name
#   Album Image

#===================================================================================================
# Component
#===================================================================================================

# This will create media_players for all echo devices. And notify services for all devices.
# There will also be a media_player.everywhere, and notify.alexa_media_everywhere.

# Inclusion/exclusion names are the friendly_names defined for each device. 
# The filters require a case-sensitive name and quotes if including spaces. You can discover the
# name by looking at the developer-tools/state in Home Assistant and reviewing the friendly_name
# attribute. You can search for all media_plays at once in dialogue below the drop down boxes.
  
# Apr 21: After adding exclusions below, most still appear. However Chloe's Alexa device has
#         disappeared. Commenting the Chloe related exclusions to see if it comes back.

alexa_media:
  accounts:
    - email: !secret alexa_user
      password: !secret alexa_pwd
      url: amazon.co.uk
      exclude_devices:
        - "Mrs's Alexa Apps"
        - "Ryan's Alexa Apps"
        - "Ryan's Alexa Web Interface"
        - "This Device"
        - "Chloe's tablet"
        - "Jenna's Fitbit Sense™️"
        - "Bedroom do not disturb switch"
        - "Everywhere do not disturb switch"
        - "Fire Stick do not disturb switch"
        - "Games Room do not disturb switch"
        - "James do not disturb switch"
        - "Jenna's Fitbit Sense™️ do not disturb switch"
        - "Study do not disturb switch"
        - "Kitchen do not disturb switch"
        - "Lounge do not disturb switch"
        - "Music Room do not disturb switch"
        - "TV - Alexa do not disturb switch"
        #- "Chloe do not disturb switch"
        - "Chloe's tablet do not disturb switch"
        - "Everywhere repeat switch"
        - "Games Room repeat switch"
        - "James repeat switch"
        - "Jenna's Fitbit Sense™️ repeat switch"
        - "Study repeat switch"
        - "Kitchen repeat switch"
        - "Lounge repeat switch"
        - "Music Room repeat switch"
        - "TV - Alexa repeat switch"
        - "Bedroom repeat switch"
        #- "Chloe repeat switch"
        - "Everywhere shuffle switch"
        - "Games Room shuffle switch"
        - "James shuffle switch"
        - "Jenna's Fitbit Sense™️ shuffle switch"
        - "Study shuffle switch"
        - "Kitchen shuffle switch"
        - "Lounge shuffle switch"
        - "Music Room shuffle switch"
        - "TV - Alexa shuffle switch"
        - "Bedroom shuffle switch"
        #- "Chloe shuffle switch"
        - "Bedroom next Alarm"
        - "Chloe's tablet next Alarm"
        - "Fire Stick next Alarm"
        - "Games Room next Alarm"
        - "James next Alarm"
        - "Kitchen next Alarm"
        - "Lounge next Alarm"
        - "Music Room next Alarm"
        - "Study next Alarm"
        - "Bedroom next Timer"
        #- "Chloe next Timer"
        - "Chloe's tablet next Timer"
        - "Fire Stick next Timer"
        - "Games Room next Timer"
        - "James next Timer"
        - "Kitchen next Timer"
        - "Lounge next Timer"
        - "Music Room next Timer"
        - "Study next Timer"
        - "Bedroom next Reminder"
        - "Chloe's tablet next Reminder"
        - "Fire Stick next Reminder"
        - "Games Room next Reminder"
        - "James next Reminder"
        - "Kitchen next Reminder"
        - "Lounge next Reminder"
        - "Music Room next Reminder"
        - "Study next Reminder"
      scan_interval: 300
      #include_devices:
      #  - "Master Bedroom"
      #  - Stairs



  
  # Music can be started manually in the Dev->Services screen with:
  #   Service: media_player.play_media
  #   {
  #     "entity_id": "media_player.chloe",
  #     "media_content_id": "Stand By Me",
  #      "media_content_type": "SPOTIFY"
  #   }
  # Or...
  #   Service: media_player.play_media
  #   {
  #     "entity_id": "media_player.chloe",
  #     "media_content_id": "BBC Radio 1",
  #     "media_content_type": "TUNEIN"
  #   }
  # Or play weather...
  #   Service: media_player.play_media
  #   {
  #     "entity_id": "media_player.chloe",
  #     "media_content_id": "Alexa.Weather.Play",
  #     "media_content_type": "sequence"
  #   }  
  #
  # To play/pause:
  #   Service: media_player.media_play_pause
  #   {
  #     "entity_id": "media_player.chloe"
  #   }
  # See below for notes on notifications.


#===================================================================================================
# Notifier
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/notify/
#===================================================================================================

# https://github.com/keatontaylor/alexa_media_player/wiki/Notification-Component

#notify:
#  - platform: alexa_media
#    name: alexa_media
# Don't think we need this since setting up the component also created notify services for each 
# device e.g. notify.alexa_media_music_room

# For notifications...
#
# Note that there is no really difference between TTS type and Announce type, and Push doesn't do 
#                    anything on my devices - might be something to do with Echo Show devices):
# "message:" - The message to send. (Required)
# "title:" - The title to display. Only works for Announce and Mobile Push. (Optional)
# "data:type:" - The type of notification. [tts, announce, push] (Required)
# "data:method:" - For Announce only, controls whether the announcement should be spoken, displayed,
#                  or both. [speak, show, all] (Optional)
# "target:" - The target Alexa devices. This can be the Friendly Name, Serial Number, entity_id, or 
#             Home Assistant Group. (Required) Warning: Mobile Push using groups will result in a 
#             push from every Echo device to every Alexa App.
#
# The following args are supported in the Service Data:
# "message:" - The message to send. (Required)
# "title:" - The title to display. Only works for Announce and Mobile Push. (Optional)
# "data:type:" - The type of notification. [tts, announce, push] (Required)
# "data:method:" - For Announce only, controls whether the announcement should be spoken, displayed,
#                  or both. [speak, show, all] (Optional)

# For triggering TTS manually in Dev -> Services screen:
#Service: media_player.alexa_tts
#  {
#  "message":"test",
#  "entity_id": "media_player.chloe"
#  }
# Or...
#  {
#  "message":"test",
#  "data":{"type":"announce"},
#  "target": "media_player.chloe"
#  }


#===================================================================================================
# Automation
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/automation/
# https://www.home-assistant.io/docs/automation/examples/
#===================================================================================================

automation:
#
#  # Make Music Room notify on doorbell motion
#  - id: alexa_music_room_notify_ring_motion
#    alias: Alexa - Notify Music Room of Doorbell Motion
#    initial_state: True
#    hide_entity: true
#    trigger:
#      - platform: state
#        entity_id: binary_sensor.ring_front_door_motion
#    action:
#      - service: notify.alexa_media
#        data:
#          data:
#            type: announce
#          target: 
#            - media_player.music_room
#          message: 'Ding-dong. Someone is at the door.'

  # Make Music Room notify on doorbell ding
  #- id: alexa_music_room_notify_ring_ding
  #  alias: Alexa - Notify Music Room of Doorbell Ding
  #  initial_state: True
  #  hide_entity: true  
  #  trigger:
  #    - platform: state
  #      entity_id: binary_sensor.ring_front_door_ding
  #      from: 'off'
  #      to: 'on'
  #  action:
  #    - service: notify.alexa_media
  #      data:
  #        data:
  #          type: announce
  #        target: 
  #          - media_player.music_room
  #        message: 'Ding-dong. Someone is at the door.'      


  # Play music
  # We can also use a playlist name in media_content_id e.g. "james's song list"
  #- id: alexa_chloes_room_music
  #  alias: Alexa - Play Music in Chloe's Room
  #  initial_state: true
  #  hide_entity: true
  #  trigger:
  #    platform: time
  #    at: '15:00:00'
  #  condition:
  #    condition: time
  #    weekday:
  #      - fri
  #  action:
  #    - service: media_player.play_media
  #      data:
  #        entity_id: media_player.chloe
  #        media_content_id : "Stand By Me"
  #        media_content_type: "SPOTIFY"

  # Play/Pause music
  #- id: alexa_chloes_room_music
  #  alias: Alexa - Play Music in Chloe's Room
  #  initial_state: True
  #  hide_entity: true
  #  trigger:
  #    platform: time
  #    at: '15:00:00'
  #  condition:
  #    condition: time
  #    weekday:
  #      - fri
  #  action:
  #    - service: media_player.media_play_pause
  #      data:
  #        entity_id: media_player.chloe

  # Play music from a group of speakers
  # This might work: play to one device in group and add 'in <group name> group' to media_content_id
  # - id: alexa_downstairs_music
  #   alias: Alexa - Play Music on Downstairs group
  #   initial_state: True
  #   hide_entity: true
  #   trigger:
  #     platform: time
  #     at: '15:00:00'
  #   condition:
  #     condition: time
  #     weekday:
  #       - fri
  #   action:
  #     - service: media_player.play_media
  #       data:
  #         entity_id: media_player.living_room
  #         media_content_id : "Stand By Me in downstairs group"
  #         media_content_type: "SPOTIFY"
 
  # Sequence commands - i.e. skills
  # We can call some basic Alexa skills from this list:
  # https://github.com/keatontaylor/alexa_media_player/wiki#sequence-commands-versions--100
  #- id: alexa_chloes_room_joke
  #  alias: Alexa a Joke in Chloe's Room
  #  initial_state: True
  #  hide_entity: true
  #  trigger:
  #    platform: time
  #    at: '15:10:00'
  #  condition:
  #    condition: time
  #    weekday:
  #      - fri
  #  action:
  #    - service: media_player.play_media
  #      data:
  #        entity_id: media_player.chloe
  #        media_content_id : "Alexa.Joke.Play"
  #        media_content_type: "sequence"

  # Templating
  #- id: alexa_example_templating
  #  alias: Alexa - Example Templating
  #  initial_state: True
  #  hide_entity: true
  #  trigger:
  #    - platform: state
  #      entity_id: binary_sensor.ring_front_door_motion
  #  action:
  #    - service: notify.alexa_media
  #      data_template:
  #        data:
  #          type: announce
  #        target: media_player.downstairs
  #        message: 'Hello. Welcome home. Cherry is {% if is_state("device_tracker.cherry",
  #                 "home") -%} also at home. {%- else -%} not at home. {%- endif %} The temperature
  #                 inside is {{ states("sensor.broadlink_sensor_temperature") }} degrees. And
  #                 outside it is {{ states("sensor.weather_temperature") }} degrees.'

  # Routines
  # Set up a routine in the Alexa app
  # Use the routine name for media_content_id below
  #- id: alexa_example_routines
  #  alias: Alexa - Example Routines
  #  initial_state: True
  #  hide_entity: true
  #  trigger:
  #    platform: time
  #    at: '15:00:00'
  #  condition:
  #    condition: time
  #    weekday:
  #      - fri
  #  action:
  #    - service: media_player.play_media
  #      data:
  #        entity_id: media_player.chloe
  #        media_content_id : "my_routine_name"
  #        media_content_type: "routine"

  # Weekly test annoucement
  #- id: alexa_weekly_tts
  #  alias: Alexa Weekly TTS Notification
  #  initial_state: True
  #  hide_entity: true
  #  trigger:
  #    platform: time
  #    at: '12:15:00'
  #  condition:
  #    condition: time
  #    weekday:
  #      - wed
  #  action:
  #    - service: notify.alexa_media
  #      data:
  #        target: 
  #          - media_player.everywhere           
  #        data:
  #          type: announce
  #        message: "This is a weekly test of the announcing system."


#===================================================================================================
# Script
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/camera/
# https://www.home-assistant.io/components/generic/
#===================================================================================================

# Just examples - not needed as can call notify service directly in above automations
#script:
#  alexa_doorbell_music_room:
#    sequence:
#    - service: media_player.volume_set
#      entity_id: media_player.music_room
#      data:
#        volume_level: '1.0'
#    - service: notify.alexa_media
#      data:
#        data:
#          type: tts
#        target: 
#          - media_player.music_room
#        message: 'Ding-dong. Someone is at the door.'
#
#  alexa_announce_everywhere_test:
#    sequence:
#      - service: notify.alexa_media
#        data:
#          target: 
#            - media_player.everywhere
#          message: "This is an example of an announcement"
#          data:
#            type: announce

#===================================================================================================
# Groups
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/group/
# Icons: https://materialdesignicons.com/
#
# If not using custom Lovelace, groups can be shown in the main dashboard or tabs at the top of the
# overview screen (set 'view: true').
# Groups with actions associated (e.g. switches) will have a group-wide switch at the top by default
# unless we set 'control: hidden'.
# Groups can be referenced as part of other groups too.
#===================================================================================================


# Can't add media players to a group