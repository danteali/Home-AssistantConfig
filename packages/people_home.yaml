####################################################################################################
## Package - House Occupied
####################################################################################################

# This package will be used to:
#   - Set individual people's home/away status based on device_tracking
#   - Set overall home occupied status based on individual's status

# Note that the Nest also has a sensor to track if everyone is out. I believe it works based on
# phone wifi connectivity and phone GPS from the Nest app.
# Nest sensor: binary_sensor.fitzallen_place_away


#===================================================================================================
# Groups
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/group/
# Icons: https://materialdesignicons.com/
#
# If not using custom Lovelace, groups can be shown in the main dashboard or tabs at the top of the
# overview screen (set 'view: true').
# Groups with actions associated (e.g. switches) will have a group-wide switch at the top by default
# unless we set 'control: hidden'.
# Groups can be referenced as part of other groups too.
#===================================================================================================

group:
  people_tracker_info:
    name: People - Tracker Info
    #view: false
    #control: hidden
    icon: mdi:cellphone
    entities:
      #- device_tracker.ryan_wifi
      #- device_tracker.jenna_wifi
      # Jenna - from known_devices.yaml static config from Google Maps
      - device_tracker.google_maps_107993763956471805595
      # Jen's phone - from known_devices.yaml static config from unifi.yaml integration
      - device_tracker.kd_jenna_oneplus6t1
      # Jenna's phone - Unifi GUI integration
      - device_tracker.jenna_oneplus6t1
      # Ryan's life360 on phone - from known_devices.yaml static config from life360
      - device_tracker.life360_ryan
      # Ryan's phone - from known_devices.yaml static config from unifi.yaml integration
      - device_tracker.kd_oneplus8t
      # Ryan's phone - Unifi GUI integration - waiting for static MAC to be discovered
      #- device_tracker.ryan_oneplus5t
      # Ryan's phone - Home assistant app
      - device_tracker.oneplus_8t_app
      - binary_sensor.home_occupied_bayesian
      - binary_sensor.ryan_home_bayesian
      - binary_sensor.jenna_home_bayesian

  people_status:
    name: People - Status
    #view: false
    #control: hidden
    icon: mdi:cellphone
    entities:
      - sensor.home_occupied_status
      - sensor.ryan_status
      - sensor.jenna_status
      - input_boolean.home_guest
      - sensor.guest_status
  
  # This group will ultimitely not be visible as these will be set programatically
  # https://www.home-assistant.io/docs/configuration/group_visibility/
  # But making visible for not  
  people_input_booleans:
    name: People - Input Booleans
    #view: false
    #control: hidden
    icon: mdi:cellphone
    entities:
      - input_select.home_occupied
      - input_select.home_ryan
      - input_select.home_jenna
      - input_boolean.home_guest
      #- input_boolean.home_occupied
      #- input_boolean.home_ryan
      #- input_boolean.home_jenna


#===================================================================================================
# Input Boolean  
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/input_boolean/
#===================================================================================================

# Setting up input booleans to track presence. These will be set programatically by automations or 
# node red based on the other device tracking

# Switched to using input_select fro people as it allows Home/Away instead of On/Off
# We can have more statuses e.g. "just home", "just left", ... See phil's write up here:
# https://philhawthorne.com/making-home-assistants-presence-detection-not-so-binary/

# Overall home_occuied = combination of ryan/jenna/bayesian but overridden by guest status
# Ryan = combination of ryan's device trackers - maybe a bayesian sensor for ryan only
# Jenna = combination of jenna's device trackers - maybe a bayesian sensor for jenna only
# Guest = the only one which will be selectable in practice
input_boolean:
  home_guest:
    name: Guests Present?
    icon: mdi:account-group
#  home_occupied:
#    name: Home Occupied?
#    #icon: mdi:
#  home_ryan:  
#    name: Ryan Home?
#    #icon: mdi:
#  home_jenna:
#    name: Jenna Home?
#    #icon: mdi:


#===================================================================================================
# Input Select 
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/input_select/
#===================================================================================================

input_select:
  home_occupied:
    name: Home Occupied?
    options:
      - "Yes"
      - "No"
    #icon: mdi:
  home_ryan:  
    name: Ryan Home?
    options:
      - Home
      - Away
    #icon: mdi:
  home_jenna:
    name: Jenna Home?
    options:
      - Home
      - Away
    #icon: mdi:
  #home_guest:
  #  name: Guest?
  #  options:
  #    - Home
  #    - Away
  #  #icon: mdi:


#===================================================================================================
# Sensors 
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/sensor/
#===================================================================================================

# We can use template sensors to make the input_booleans above look like the a normal device tracker 
# i.e just display the current state instead of providing the on/off button

sensor:
  - platform: template
    sensors:
      home_occupied_status:
        value_template: '{{ states.input_select.home_occupied.state }}'
        friendly_name: 'Home Occupied'
      ryan_status:
        value_template: '{{ states.input_select.home_ryan.state }}'
        friendly_name: 'Ryan'
      jenna_status:
        value_template: '{{ states.input_select.home_jenna.state }}'
        friendly_name: 'Jenna'
      guest_status:
        value_template: '{{ states.input_boolean.home_guest.state }}'
        friendly_name: 'Guest'
#      home_occupied_status:
#        value_template: '{{ states.input_boolean.home_occupied.state }}'
#        friendly_name: 'Home Occupied'
#      ryan_status:
#        value_template: '{{ states.input_boolean.home_ryan.state }}'
#        friendly_name: 'Ryan'
#      jenna_status:
#        value_template: '{{ states.input_boolean.home_jenna.state }}'
#        friendly_name: 'Jenna'

      # Add this to customize.yaml to have pics
      #sensor.ryan_status:
      #  entity_picture: #URL to picture
      #sensor.jenna_status:
      #  entity_picture: #URL to picture


#===================================================================================================
# Automation
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/automation/
# https://www.home-assistant.io/docs/automation/examples/
#===================================================================================================

# Some automations to set home/away states 

automation:

#  - id: arriving_home
#    alias: Arriving home
#    trigger:
#      platform: state
#      entity_id: binary_sensor.motion_garage
#      to: 'on'
#    condition:
#      condition: state
#      entity_id: input_boolean.notify_home
#      state: 'on'
#    action:
#      - service: input_boolean.turn_on
#        data:
#          entity_id: input_boolean.notify_home
#      - service: notify.pushbullet
#      data:
#        title: ""
#        message: "Honey, I'm home!"

# Turn off when someone gets home...
# Will transfer to Node Red.
  - id: zone_home_leave_notify
    alias: "Notify on leaving home"
    initial_state: false
    trigger:
      platform: zone
      entity_id: device_tracker.life360_ryan
      zone: zone.home
      event: leave
    action:
      - service: notify.pushover
        data:
          message: "life360 left"
#      - service: homeassistant.turn_off
#        entity_id: group.away_automations
#      - service: notify.iphone_pushbullet
#        data:
#          title: "I'm outta here!"
#          message: "I'll be surprised if this works!"

#- alias: 'Device State Change Alert'
#  trigger:
#    platform: state
#    entity_id: device_tracker.user1, device_tracker.user2, device_tracker.user3, device_tracker.user4
#  action:
#    - service: notify.notify
#      data_template:
#        message: >
#          {{ trigger.to_state.attributes.friendly_name }} is {% if trigger.to_state.state == 'home' %}back{% else %}away{% endif %}.
#        title: ""
#===================================================================================================
# Bayesian Binary Sensor
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/bayesian/
# You can add almost any entity with a state to this list and play with the probabilities to try 
# to get better answers for when the house is occupied.
#===================================================================================================

# Fancy maths to factor in all trackers etc to get a combined probability based guess of whether
# the house is occupied.
# Notice that the input_booleab.home_guest will overide all the others based on the defined 
# probabilities below

#  prob_given_true: 0.9   # 90% chance that if state is 'home' then person is at home
#  prob_given_false: 0.2  # 20% chance that if state is not 'home' then person is still at home
      

binary_sensor:
  - platform: bayesian
    prior: 0.8   # At any point in time how likely is this event to occur?
    name: 'Ryan Home - Bayesian'
    probability_threshold: 0.9   # The probability at which the sensor should trigger to on.
    observations:
      - entity_id: 'device_tracker.life360_ryan'
        # Ryan's life360 on phone - from known_devices.yaml static config from life360
        prob_given_true: 0.95
        prob_given_false: 0.2
        platform: 'state'
        to_state: 'home'
      - entity_id: 'device_tracker.oneplus_8t_app'
        # Ryan's phone - Home Assistant app
        prob_given_true: 0.9
        prob_given_false: 0.1
        platform: 'state'
        to_state: 'home'
      #- entity_id: 'device_tracker.oneplus_8t'
        # Ryan's phone - Unifi GUI integration - waiting for device static MAC discovery
        # May swap/include unifi discovered device later.
      #  prob_given_true: 0.9
      #  prob_given_false: 0.1
      #  platform: 'state'
      #  to_state: 'home'

  - platform: bayesian
    prior: 0.7   # At any point in time how likely is this event to occur?
    name: 'Jenna Home - Bayesian'
    probability_threshold: 0.9   # The probability at which the sensor should trigger to on.
    observations:
      - entity_id: 'device_tracker.google_maps_107993763956471805595'
        # Jenna - from known_devices.yaml static config from Google Maps
        prob_given_true: 0.9
        prob_given_false: 0.2
        platform: 'state'
        to_state: 'home'
      - entity_id: 'device_tracker.jenna_oneplus6t1'
        # Jenna's phone - Unifi GUI integration
        prob_given_true: 0.9
        prob_given_false: 0.1
        platform: 'state'
        to_state: 'home'



  - platform: bayesian
    prior: 0.65   # At any point in time how likely is this event to occur?
    name: 'Home Occupied - Bayesian'
    probability_threshold: 0.9   # The probability at which the sensor should trigger to on.
    observations:
      - entity_id: 'binary_sensor.ryan_home_bayesian'
        # From baysian above
        prob_given_true: 0.9
        prob_given_false: 0.1
        platform: 'state'
        to_state: 'on'
      - entity_id: 'binary_sensor.jenna_home_bayesian'
        # From baysian above
        prob_given_true: 0.9
        prob_given_false: 0.1
        platform: 'state'
        to_state: 'on'
      - entity_id: 'input_boolean.home_guest'
        prob_given_true: 1
        prob_given_false: 0
        platform: 'state'
        to_state: 'on'
      #- entity_id: 'binary_sensor.fitzallen_place_away'
      #  # Nest home/away status - no longer exists since Google-owned config setup
      #  prob_given_true: 0.9
      #  prob_given_false: 0.2
      #  platform: 'state'
      #  to_state: 'off'      
      #- entity_id: 'device_tracker.jenna_wifi'
      #  prob_given_true: 0.9   # 90% chance that if state is 'home' then person is at home
      #  prob_given_false: 0.2  # 20% chance that if state is not 'home' then person is still at home
      #  platform: 'state'
      #  to_state: 'home'
      #- entity_id: 'device_tracker.ryan_wifi'
      #  prob_given_true: 0.9
      #  prob_given_false: 0.2
      #  platform: 'state'
      #  to_state: 'home'      
      #- entity_id: 'binary_sensor.motion'
      #  prob_given_true: 0.7
      #  prob_given_false: 0.5
      #  platform: 'state'


