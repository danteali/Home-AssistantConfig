####################################################################################################
# Zigbee2mqtt Control from HA Dashboard
####################################################################################################

# Sources:
# https://www.zigbee2mqtt.io/integration/home_assistant.html

#===================================================================================================


# Input select for Zigbee2MQTT debug level
input_select:
  zigbee2mqtt_log_level:
    name: Zigbee2MQTT Log Level
    options:
      - debug
      - info
      - warn
      - error
    initial: info
    icon: mdi:format-list-bulleted

# Input number for joining time remaining (in minutes)
input_number:
  zigbee2mqtt_join_minutes:
    name: "Zigbee2MQTT join minutes"
    initial: 2
    min: 1
    max: 5
    step: 1
    mode: slider
    
# Input text to input Zigbee2MQTT friendly_name for scripts
input_text:
  zigbee2mqtt_old_name:
    name: Zigbee2MQTT Old Name
    initial: ""
  zigbee2mqtt_new_name:
    name: Zigbee2MQTT New Name
    initial: ""
  zigbee2mqtt_remove:
    name: Zigbee2MQTT Remove
    initial: ""

# Scripts for renaming & removing devices
script:
  zigbee2mqtt_rename:
    alias: Zigbee2MQTT Rename
    sequence:
      service: mqtt.publish
      data_template:
        topic: zigbee2mqtt/bridge/config/rename
        payload_template: >-
          {
            "old": "{{ states.input_text.zigbee2mqtt_old_name.state | string }}",
            "new": "{{ states.input_text.zigbee2mqtt_new_name.state | string }}"
          }
  zigbee2mqtt_remove:
    alias: Zigbee2MQTT Remove
    sequence:
      service: mqtt.publish
      data_template:
        topic: zigbee2mqtt/bridge/config/remove
        payload_template: "{{ states.input_text.zigbee2mqtt_remove.state | string }}"

# Timer for joining time remaining
timer:
  zigbee_permit_join:
    name: Time remaining

sensor:
  # Sensor for monitoring the bridge state
  - platform: mqtt
    name: Zigbee2MQTT Bridge state
    state_topic: "zigbee2mqtt/bridge/state"
    icon: mdi:router-wireless
  # Sensor for Showing the Zigbee2MQTT Version
  - platform: mqtt
    name: Zigbee2MQTT Version
    state_topic: "zigbee2mqtt/bridge/config"
    value_template: "{{ value_json.version }}"
    icon: mdi:zigbee
  # Sensor for Showing the Coordinator Version
  - platform: mqtt
    name: Coordinator Version
    state_topic: "zigbee2mqtt/bridge/config"
    value_template: "{{ value_json.coordinator }}"
    icon: mdi:chip

# Switch for enabling joining
switch:
  - platform: mqtt
    name: "Zigbee2MQTT Main join"
    state_topic: "zigbee2mqtt/bridge/config/permit_join"
    command_topic: "zigbee2mqtt/bridge/config/permit_join"
    payload_on: "true"
    payload_off: "false"

automation:
  # Automation for sending MQTT message on input select change
  - id: zigbee2mqtt_log_level
    alias: Zigbee2MQTT log level
    initial_state: "on"
    trigger:
      platform: state
      entity_id: input_select.zigbee2mqtt_log_level
    action:
      - service: mqtt.publish
        data:
          payload_template: "{{ states('input_select.zigbee2mqtt_log_level') }}"
          topic: zigbee2mqtt/bridge/config/log_level
  # Automation to start timer when enable join is turned on
  - id: zigbee_join_enabled
    alias: Zigbee Join Enabled
    trigger:
      platform: state
      entity_id: switch.zigbee2mqtt_main_join
      to: "on"
    action:
      service: timer.start
      entity_id: timer.zigbee_permit_join
      data_template:
        duration: "{{ '00:0%i:00' % (states('input_number.zigbee2mqtt_join_minutes') | int ) }}"
  # Automation to stop timer when switch turned off and turn off switch when timer finished
  - id: zigbee_join_disabled
    alias: Zigbee Join Disabled
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.zigbee_permit_join
      - platform: state
        entity_id: switch.zigbee2mqtt_main_join
        to: "off"
    action:
      - service: timer.cancel
        data:
          entity_id: timer.zigbee_permit_join
      - service: switch.turn_off
        entity_id: switch.zigbee2mqtt_main_join
  - id: "zigbee2mqtt_create_notification_on_successfull_interview"
    alias: Zigbee Device Joined Notification
    trigger:
      platform: mqtt
      topic: 'zigbee2mqtt/bridge/log'
    condition:
      condition: template
      value_template: '{{trigger.payload_json.type == "pairing" and trigger.payload_json.message == "interview_successful"}}'
    action:
      - service: persistent_notification.create
        data_template:
          title: Device joined the Zigbee2MQTT network
          message: "Name: {{trigger.payload_json.meta.friendly_name}},
                    Vendor: {{trigger.payload_json.meta.vendor}},
                    Description: {{trigger.payload_json.meta.description}}"


#===================================================================================================
# OLD - updated Dec 2020 with current z2m info from site linked at top
#===================================================================================================
#
## Input select for Zigbee2mqtt debug level
#input_select:
#  zigbee2mqtt_log_level:
#    name: Zigbee2mqtt Log Level
#    options:
#      - debug
#      - info
#      - warn
#      - error
#    initial: info
#    icon: mdi:format-list-bulleted
#
## Input text to input Zigbee2mqtt friendly_name for scripts
#input_text:
#  zigbee2mqtt_old_name:
#    name: Zigbee2mqtt Old Name
#  zigbee2mqtt_new_name:
#    name: Zigbee2mqtt New Name
#  zigbee2mqtt_remove:
#    name: Zigbee2mqtt Remove
#
## Scripts for renaming & removing devices
#script:
#  zigbee2mqtt_rename:
#    alias: Zigbee2mqtt Rename
#    sequence:
#      service: mqtt.publish
#      data_template:
#        topic: zigbee2mqtt/bridge/config/rename
#        payload_template: >-
#          {
#            "old": "{{ states.input_text.zigbee2mqtt_old_name.state | string }}",
#            "new": "{{ states.input_text.zigbee2mqtt_new_name.state | string }}"
#          }
#  zigbee2mqtt_remove:
#    alias: Zigbee2mqtt Remove
#    sequence:
#      service: mqtt.publish
#      data_template:
#        topic: zigbee2mqtt/bridge/config/remove
#        payload_template: "{{ states.input_text.zigbee2mqtt_remove.state | string }}"
#
## Timer for joining time remaining (120 sec = 2 min)
#timer:
#  zigbee_permit_join:
#    name: Time remaining
#    duration: 120
#
#sensor:
#  # Sensor for monitoring the bridge state
#  - platform: mqtt
#    name: Zigbee2mqtt Bridge state
#    state_topic: "zigbee2mqtt/bridge/state"
#    icon: mdi:router-wireless
#  # Sensor for Showing the Zigbee2mqtt Version
#  - platform: mqtt
#    name: Zigbee2mqtt Version
#    state_topic: "zigbee2mqtt/bridge/config"
#    value_template: "{{ value_json.version }}"
#    icon: mdi:zigbee
#  # Sensor for Showing the Coordinator Version
#  - platform: mqtt
#    name: Coordinator Version
#    state_topic: "zigbee2mqtt/bridge/config"
#    value_template: "{{ value_json.coordinator }}"
#    icon: mdi:chip
#
## Switch for enabling joining
#switch:
#  - platform: mqtt
#    name: "Zigbee2mqtt Main join"
#    state_topic: "zigbee2mqtt/bridge/config/permit_join"
#    command_topic: "zigbee2mqtt/bridge/config/permit_join"
#    payload_on: "true"
#    payload_off: "false"
#
#automation:
#  # Automation for sending MQTT message on input select change
#  - alias: Zigbee2mqtt Log Level
#    initial_state: "on"
#    trigger:
#      platform: state
#      entity_id: input_select.zigbee2mqtt_log_level
#    action:
#      - service: mqtt.publish
#        data:
#          payload_template: "{{ states('input_select.zigbee2mqtt_log_level') }}"
#          topic: zigbee2mqtt/bridge/config/log_level
#  # Automation to start timer when enable join is turned on
#  - id: zigbee_join_enabled
#    alias: Zigbee Join Enabled
#    trigger:
#      platform: state
#      entity_id: switch.zigbee2mqtt_main_join
#      to: "on"
#    action:
#      service: timer.start
#      entity_id: timer.zigbee_permit_join
#  # Automation to stop timer when switch turned off and turn off switch when timer finished
#  - id: zigbee_join_disabled
#    alias: Zigbee Join Disabled
#    trigger:
#      - platform: event
#        event_type: timer.finished
#        event_data:
#          entity_id: timer.zigbee_permit_join
#      - platform: state
#        entity_id: switch.zigbee2mqtt_main_join
#        to: "off"
#    action:
#      - service: timer.cancel
#        data:
#          entity_id: timer.zigbee_permit_join
#      - service: switch.turn_off
#        entity_id: switch.zigbee2mqtt_main_join
#  - id: "zigbee2mqtt_create_notification_on_successfull_interview"
#    alias: Zigbee Device Joined Notification
#    trigger:
#      platform: mqtt
#      topic: 'zigbee2mqtt/bridge/log'
#    condition:
#      condition: template
#      value_template: '{{trigger.payload_json.type == "pairing" and trigger.payload_json.message == "interview_successful"}}'
#    action:
#      - service: persistent_notification.create
#        data_template:
#          title: Device joined the zigbee2mqtt network
#          message: "Name: {{trigger.payload_json.meta.friendly_name}},
#                    Vendor: {{trigger.payload_json.meta.vendor}},
#                    Description: {{trigger.payload_json.meta.description}}"


#===================================================================================================
# OLD - updated Aug 2020 with current z2m info from site linked at top
#===================================================================================================
#
## Group
#group:
#  zigbee_group:
#    view: false
#    control: hidden
#    name: Zigbee2mqtt_control
#    entities:
#      - input_boolean.zigbee2mqtt_permit_join
#      - timer.zigbee2mqtt_permit_join
#      - sensor.zigbee2mqtt_bridge_state
#      #- switch.zigbee2mqtt_main_join
#      - automation.zigbee2mqtt_control_enable_join
#      - automation.zigbee2mqtt_control_disable_join
#      - automation.zigbee2mqtt_control_disable_join_timer
#      - input_select.zigbee2mqtt_log_level
#      - automation.zigbee2mqtt_control_log_level
#
#
## Input select for Zigbee2mqtt debug level
#input_select:
#  zigbee2mqtt_log_level:
#    name: Zigbee2mqtt Log Level
#    options:
#     - debug
#     - info
#     - warn
#     - error
#    initial: info
#    icon: mdi:format-list-bulleted
#
## Input boolean for enabling/disabling joining
#input_boolean:
#  zigbee2mqtt_permit_join:
#    name: Zigbee2mqtt Allow Devices to Join
#    initial: off
#    icon: mdi:cellphone-wireless
#
## Timer for joining time remaining (120 sec = 2 min)
#timer:
#  zigbee2mqtt_permit_join:
#    name: Time remaining
#    duration: 120
#
## Sensor for monitoring the bridge state
#sensor:
#  - platform: mqtt
#    name: Zigbee2mqtt Bridge State
#    state_topic: "zigbee2mqtt/bridge/state"
#    icon: mdi:router-wireless
#
## Kept getting config error: Invalid config for [switch]: required key not provided @ data['platform'].
## Switch for enabling joining
##switch:
##  - platform: mqtt
##    name: Zigbee2mqtt Main Join
##    state_topic: "zigbee2mqtt/bridge/config/permit_join"
##    command_topic: "zigbee2mqtt/bridge/config/permit_join"
##    payload_on: "ON"
##    payload_off: "OFF"
#
## Automations
#automation:
#  - id: zigbee2mqtt_control_log_level
#    alias: Log Level
#    initial_state: 'on'
#    trigger:
#      - platform: state
#        entity_id: input_select.zigbee2mqtt_log_level
#        to: debug
#      - platform: state
#        entity_id: input_select.zigbee2mqtt_log_level
#        to: warn
#      - platform: state
#        entity_id: input_select.zigbee2mqtt_log_level
#        to: error
#      - platform: state
#        entity_id: input_select.zigbee2mqtt_log_level
#        to: info
#    action:
#      - service: mqtt.publish
#        data:
#          payload_template: '{{ states(''input_select.zigbee2mqtt_log_level'') }}'
#          topic: zigbee2mqtt/bridge/config/log_level
  #
#  - id: zigbee2mqtt_control_enable_join
#    alias: Enable joining
#    #hide_entity: true
#    trigger:
#      - platform: state
#        entity_id: input_boolean.zigbee_permit_join
#        to: 'on'
#    action:
#      - service: mqtt.publish
#        data:
#          topic: zigbee2mqtt/bridge/config/permit_join
#          payload: 'true'
#      - service: timer.start
#        data:
#          entity_id: timer.zigbee_permit_join
#
#  - id: zigbee2mqtt_control_disable_join
#    alias: Disable joining
#    #hide_entity: true
#    trigger:
#      - entity_id: input_boolean.zigbee_permit_join
#        platform: state
#        to: 'off'
#    action:
#      - data:
#          payload: 'false'
#          topic: zigbee2mqtt/bridge/config/permit_join
#        service: mqtt.publish
#      - data:
#          entity_id: timer.zigbee_permit_join
#        service: timer.cancel
    #
#  - id: zigbee2mqtt_control_disable_join_timer
#    alias: Disable Joining by Timer
#    #hide_entity: true
#    trigger:
#      - platform: event
#        event_type: timer.finished
#        event_data:
#          entity_id: timer.zigbee_permit_join
#    action:
#      - service: mqtt.publish
#        data:
#          topic: zigbee2mqtt/bridge/config/permit_join
#          payload: 'false'
#      - service: input_boolean.turn_off
#        data:
#          entity_id: input_boolean.zigbee_permit_join

    