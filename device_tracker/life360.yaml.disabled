####################################################################################################
## Package - Life 360
####################################################################################################

# July 2019
# Now a normal HA component, not a custom component. 
# Configuration has moved from here to the configuation.yaml or packages/life360.yaml file.
# https://community.home-assistant.io/t/life360-device-tracker-platform/52406/1077
# https://www.home-assistant.io/components/life360/

# Sources:
# https://github.com/pnbruckner/homeassistant-config/blob/master/docs/life360.md
# First install custom_component

#===================================================================================================
# Configuration (July '19 - now config'd in configuration.yaml or packages/life360.yaml file)
#===================================================================================================

#  - platform: life360
#    username: !secret life360_user
#    password: !secret life360_pwd
#    prefix: life360
#    add_zones: all






#===================================================================================================

# Below examples would not appear in a device_tracker.yaml file. They need to be moved to a 
# packages.yaml file or a sensor/automation.yaml file.

#===================================================================================================
# Sensors 
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/sensor/
#===================================================================================================

#sensor:
## Life360 Examples
## This example assumes time_as is set to device_or_utc or device_or_local. It determines the 
## difference between the time zone in which the device is located and the time_zone in HA's 
## configuration. A positive value means the device's time zone is ahead of (or later than, or 
## east of) the local time zone.
#  - platform: template
#    sensors:
#      my_tz_offset:
#        friendly_name: My time zone offset
#        unit_of_measurement: hr
#        value_template: >
#          {% set state = states.device_tracker.life360_me %}
#          {% if state.attributes is defined and
#                state.attributes.time_zone is defined and
#                state.attributes.time_zone != 'unknown' %}
#            {% set n = now() %}
#            {{ (n.astimezone(state.attributes.last_seen.tzinfo).utcoffset() -
#                n.utcoffset()).total_seconds()/3600 }}
#          {% else %}
#            unknown
#          {% endif %}
#
## This example converts a time attribute to the local time zone. It works no matter which time 
## zone the attribute is in.
#  - platform: template
#    sensors:
#      my_last_seen_local:
#        friendly_name: My last_seen time in local time zone
#        value_template: >
#          {{ state_attr('device_tracker.life360_me', last_seen').astimezone(now().tzinfo) }}


#===================================================================================================
# Automation
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/automation/
# https://www.home-assistant.io/docs/automation/examples/
#===================================================================================================


#automation:
## Life360 Examples
#  - alias: Life360 Overdue Update
#    trigger:
#      platform: event
#      event_type: life360_update_overdue
#    action:
#      service: notify.email_me
#      data_template:
#        title: Life360 update overdue
#        message: >
#          Update for {{
#            state_attr(trigger.event.data.entity_id, 'friendly_name') or
#            trigger.event.data.entity_id
#          }} is overdue.
#  - alias: Life360 Update Restored
#    trigger:
#      platform: event
#      event_type: life360_update_restored
#    action:
#      service: notify.email_me
#      data_template:
#        title: Life360 update restored
#        message: >
#          Update for {{
#            state_attr(trigger.event.data.entity_id, 'friendly_name') or
#            trigger.event.data.entity_id
#          }} restored after {{ trigger.event.data.wait }}.