#===================================================================================================
# DEFAULT CONFIG
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/integrations/default_config/
# Loads default set of integrations. Do not remove.
# Default integrations include:
#   - Automation (automation)
#   - Backup (backup)
#   - Home Assistant Cloud (cloud)
#   - Configuration (config)
#   - Counter (counter)
#   - DHCP Discovery (dhcp)
#   - Energy (energy)
#   - Frontend (frontend)
#   - History (history)
#   - Image (image)
#   - Input boolean (input_boolean)
#   - Input button (input_button)
#   - Input datetime (input_datetime)
#   - Input number (input_number)
#   - Input select (input_select)
#   - Input text (input_text)
#   - Logbook (logbook)
#   - Map (map)
#   - Media Source (media_source)
#   - Mobile App Support (mobile_app)
#   - My Home Assistant (my)
#   - Person (person)
#   - Scene (scene)
#   - Scripts (script)
#   - Simple Service Discovery Protocol (SSDP) (ssdp)
#   - Stream (stream)
#   - Sun (sun)
#   - System Health (system_health)
#   - Tag (tag)
#   - Timer (timer)
#   - USB (usb)
#   - Webhooks (webhook)
#   - Zero-configuration networking (zeroconf) (zeroconf)
#   - Zone (zone)
#===================================================================================================
default_config:

#===================================================================================================
# FRONEND
# https://www.home-assistant.io/integrations/frontend
# Any changes to default frontend config
#---------------------------------------------------------------------------------------------------
frontend:
  themes: !include_dir_merge_named themes

#===================================================================================================
# TEXT-TO-SPEECH (TTS)
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/tts/
# Text-to-Speech (TTS) enables Home Assistant to speak to you.
#===================================================================================================
tts:
  - platform: google_translate
    service_name: google_say


#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>    
# Above this line is the default config file contents.
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

#===================================================================================================
# BASIC CONFIG
#---------------------------------------------------------------------------------------------------
# https://home-assistant.io/docs/configuration/basic/
#===================================================================================================
homeassistant:
  # Location required to calculate the time the sun rises and sets
  # SET IN GUI
  #latitude: !secret home_lat
  #longitude: !secret home_long
  # Impacts weather/sunrise data (altitude above sea level in meters)
  #elevation: 0

  # Configure authentication providers (note that 2FA can be enabled in GUI)
  # https://www.home-assistant.io/docs/authentication/providers/
  auth_providers:
    # Defines a range of IP addresses for which no authentication will be required
    - type: trusted_networks
      # Any IP/ranges that we want to allow auto login from. Also need to set a 'trusted_user' for each enabled IP/range
      # Only need to cover 'real' client IPs as x-forwarded-for header is used to detect source so shouldn't have to include proxy IP here.
      trusted_networks:
        - 192.168.0.0/24 # Home LAN subnet
        #- 192.168.64.0/18 # Should cover any manually defined docker subnets (centered around 192.168.90.0) - 192.168.64.0 - 192.168.127.254
        #- 192.168.90.0/24 # Manually specifying docker traefik network since ha.mc-guinness.co.uk was not working for auto login even with /18 above - this MIGHT work.
        #- 192.168.30.0/24 # IOT subnet
        #- 172.16.0.0/12 # Should cover all auto-created docker subnets - 172.16.0.0-172.31.255.255
      # Since we have multiple users (Ryan & Legacy Password) we need to define trusted_users so that 
      # HA knows which user to login trusted_network under.
      trusted_users:
        192.168.0.0/24:
          - 1a95ee6b76e041969584130d696401b5 # Get ID from Settings -> People -> Users tab
          #- user2
      # Skips login form if only one user is available in 'trusted_users'
      allow_bypass_login: true
    # Default auth provider i.e. the login form
    - type: homeassistant
    # Allow authentication with an API password set in the HTTP component (will be depreciated in future)
    - type: legacy_api_password
      api_password: !secret http_password
  
  # Enable access to external directories - have to be mounted within docker-compose 
  # List of folders that can be used as sources for sending files.
  # !!! Will enable later if needed !!!
  #allowlist_external_dirs:
  #  - /tmp
  #  - /scratchpad

  # A mapping of local media sources and their paths on disk.
  # May be GUI configurable???
  # !!! Will enable later if needed !!!
  #media_dirs:

  # Other config files
  #customize: !include customize.yaml
  packages: !include_dir_named packages



#===================================================================================================
# WEBSOCKET API
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/integrations/websocket_api 
#
# Enable API for various interactions (incl HASS Configurator)
#===================================================================================================

websocket_api:


#===================================================================================================
# HTTP ACCESS
#---------------------------------------------------------------------------------------------------
# https://home-assistant.io/components/http/
#
# If using fail2ban we can disable built in ip banning
#===================================================================================================
http:
  #base_url: !secret base_url
  # Set below to true to tell HA to use the 'real' IP of client instead of the proxy's IP.
  # Allows auto-login if real IP is in 'trusted networks' above.
  # We can see x-forwarded-for header example in 'whoami' container
  use_x_forwarded_for: true
  # Add traefik's IP as trusted proxy to tell HA that it's okay to accept connections from there. 
  trusted_proxies:
    - 192.168.90.0/24 # Manually specifying docker traefik network since ha.mc-guinness.co.uk was not working for auto login even with /18 above - this MIGHT work.
    #- 192.168.0.0/24 # Home LAN (unlikely to proxy from here but just in case)
    #- 192.168.64.0/18 # Should cover any manually defined docker subnets (centered around 192.168.90.0) - 192.168.64.0 - 192.168.127.254
    #- 172.16.0.0/12 # Should cover all auto-created docker subnets - 172.16.0.0-172.31.255.255
  # Re-enable banned IPs by deleting ip_bans.yaml file
  #ip_ban_enabled: true # (default: false) Enable ban after X unsuccessful login attempts - do not turn on while configuring.
  #login_attempts_threshold: 5 # Number of failed login attempt from single IP after which it will be automatically banned


#===================================================================================================
# LOGGER
#---------------------------------------------------------------------------------------------------
# https://home-assistant.io/components/logger/
#
# Lets you define the level of logging activities in Home Assistant.
# See ../packages/logger.yaml for custom input_select and automation to allow changing log level in
# HA GUI without a restart.
#
# Log levels:
#      - critical
#      - fatal
#      - error
#      - warning
#      - warn
#      - info
#      - debug
#      - notset
#
# If we have a complex config, we can define in a separate yaml file and refer to it here instead:
#   #!include logger.yaml
#===================================================================================================

logger: 
  default: warn # Change to debug TEMPORARILY if you need to analyse log info otherwise logs get huge
  #logs:
  #  homeassistant.components.unifi_direct: warn
  #  homeassistant.components.device_tracker: warn
  #  homeassistant.components.command_line: warn
  #  homeassistant.components.websocket_api.http.connection: warn
  #  haffmpeg.core: warn

  # If you ever want to determine if a device is being filtered (e.g., you use include_devices and
  # don't see a new entity), you can discover what is being excluded by enabling debug logging on
  # alexa_media.helpers and searching for the Excluding device: line.
  # https://github.com/custom-components/alexa_media_player/wiki/Configuration#configuring-inclusions-or-exclusions
  #  homeassistant.components.alexa_media.helpers: debug
  #  alexa_media.helpers: debug

  #  homeassistant.components.automation: info
  #  homeassistant.components.input_select: debug
  #  homeassistant.core: warn
  #  homeassistant.components.sensor.pi_hole: warn
  #  homeassistant.components.sensor.rest: warn
  #  homeassistant.components.recorder: warn
  #  homeassistant.components.binary_sensor: warn
  #  homeassistant.components.websocket_api: warn
  #  homeassistant.util.json: warn

  #  homeassistant.setup: info
  #  aiohttp.access: critical
  #  aiohttp.server: critical
  #  homeassistant.core: error
  #  homeassistant.components.automation: warn
  #  homeassistant.components.climate.nest: warn
  #  homeassistant.components.discovery: warn
  #  homeassistant.components.feedreader: warn
  #  homeassistant.components.http: warn
  #  homeassistant.components.media_player: info
  #  homeassistant.components.sensor.darksky: warn
  #  homeassistant.components.zwave: warn
  #  homeassistant.helpers.script: info
  #  homeassistant.helpers.entity: critical
  #  homeassistant.exceptions: info
  #  py.warnings: error
  #  requests.packages.urllib3.connectionpool: critical
  #  root: warn

#===================================================================================================
# PANELS
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/integrations/panel_iframe/
#
# Add extra panels to left hand menu
#===================================================================================================
panel_iframe:
  #hass_configurator:
  #  title: HASS Configurator
  #  icon: mdi:file-document-edit
  #  url: !secret hassconfigurator_url
  vscode:
    title: VSCode
    icon: mdi:microsoft-visual-studio
    url: !secret vscode_url
  nodered:
    title: Node Red
    icon: mdi:download-network-outline
    url: !secret nodered_url
  tasmoadmin:
    title: TasmoAdmin
    icon: mdi:power-standby
    url: !secret tasmoadmin_url
  zigbee2mqtt:
    title: Zigbee2MQTT
    icon: mdi:zigbee
    #icon: mdi:access-point-network
    url: !secret zigbee2mqtt_url
  integrations:
    title: Integrations
    icon: mdi:chip
    url: !secret integrations_url


#===================================================================================================
# METRICS EXPORT
#	Prometheus metrics probably more useful
# (especially if using vmagent to ingest influxdb metrics as it produces strange metric names)
#===================================================================================================

#---------------------------------------------------------------------------------------------------
# PROMETHEUS
# https://www.home-assistant.io/integrations/prometheus
#---------------------------------------------------------------------------------------------------
# Expose metrics to Prometheus scraping
#
# Add this to prometheus.yaml to scrape:
# Example Prometheus scrape_configs entry
#  - job_name: "home-assistant"
#    scrape_interval: 60s
#    metrics_path: /api/prometheus
#    ## Legacy api password
#    #params:
#    #  api_password: ['PASSWORD']
#    # Long-Lived Access Token
#    bearer_token: "your.longlived.token"
#    scheme: https
#    static_configs:
#      - targets: ['HOSTNAME:8123']
#---------------------------------------------------------------------------------------------------

prometheus:
  namespace: ha
  filter:
    exclude_domains:
      - calendar
      - configurator
      - device_tracker
      - group
      - input_text
      - input_select
      - media_player
      - timer
      - updater
      - zigbee2mqtt_networkmap.zone

  # Example bits from config in guide
  #component_config_glob:
  #  sensor.*_hum:
  #    override_metric: humidity_percent
  #  sensor.*_temp:
  #    override_metric: temperature_c
  #  sensor.temperature*:
  #    override_metric: temperature_c
  #  sensor.*_bat:
  #    override_metric: battery_percent
  #filter:
  #  include_domains: 
  #    - sensor
  #  exclude_entity_globs:
  #    - sensor.weather_*
  #  exclude_entities:
  #    - sensor.weather_precipitation_24h


#---------------------------------------------------------------------------------------------------
# INFLUXDB
# https://www.home-assistant.io/integrations/influxdb/
#---------------------------------------------------------------------------------------------------
# Enable logging of all state changes to an external InfluxDB database
# Not really required if using Prometheus too.
#---------------------------------------------------------------------------------------------------
#
#influxdb:
#  api_version: 1 # Change to 2 for influx v2 connection
#  host: vmagent
#  ssl: false # set to true if using FQDN for host
#  port: 8429
#  #username:
#  #password:
#
#  # Influx API v2 config
#  #api_version: 2
#  #token: !secret influxdb_token
#  #organization: f75b3db9635e8c02
#  #bucket: home_assistant
#
#  tags:
#    source: HA
#  tags_attributes:
#    - friendly_name
#  max_retries: 10
#  default_measurement: state
#  exclude:
#    domains:
#      - calendar
#      - configurator
#      - device_tracker
#      - group
#      - input_text
#      - input_select
#      - media_player
#      - timer
#      - updater
#      - zigbee2mqtt_networkmap.zone
##  entity_globs:
##    domains:
##      - binary_sensor.*_occupancy


#===================================================================================================
# DOWNLOADER
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/downloader/
# Specify 'base' dir to be used for any downloads - must be a docker volume if it is to also be 
# available on local system
#===================================================================================================

#downloader:
#  download_dir: /scratchpad/homeassistant

#===================================================================================================
# FFMPEG
#---------------------------------------------------------------------------------------------------
# Enable processing video with ffmpeg
#===================================================================================================

#ffmpeg:

#===================================================================================================
# TEXT-TO-SPEECH (TTS)
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/components/tts/
# Text-to-Speech (TTS) enables Home Assistant to speak to you.
#===================================================================================================

#tts:
#  - platform: google_translate
#    service_name: google_say
#  #- platform: alexa_media
#  #  service_name: alexa_tts


#===================================================================================================
# DISCOVERY
#---------------------------------------------------------------------------------------------------
# https://www.home-assistant.io/integrations/discovery/
#
# Enable automatic discovery of devices on local network
# No longer recommended - auto discovery enabled by default. The only reason to use this is to
# enable discovery for specific services which do not have discovery enabled by default
# but there are other recommended methods to use instead ffor these services. 
#===================================================================================================
#discovery:
#  ignore:
#    - plex_mediaserver
#    - plex


#===================================================================================================
# GOOGLE ASSISTANT
#---------------------------------------------------------------------------------------------------
# Enable device discovery with Google Assistant
#
# https://www.home-assistant.io/components/google_assistant/
#===================================================================================================

google_assistant: !include google_assistant.yaml



############################################################################################
# REMAINING CONFIG BROKEN UP INTO OTHER FILES/FOLDERS BUT DEFINED IN PACKAGES WHERE POSSIBLE
############################################################################################

group: !include_dir_merge_named group
script: !include_dir_merge_named script
automation: !include_dir_merge_list automation
scene: !include_dir_merge_list scene
switch: !include_dir_merge_list switch
notify: !include_dir_merge_list notify
binary_sensor: !include_dir_merge_list binary_sensor
device_tracker: !include_dir_merge_list device_tracker
input_select: !include_dir_merge_named input_select
#camera: !include_dir_merge_list camera
#sensor: !include_dir_merge_list sensor
